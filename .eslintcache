[{"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\index.tsx":"1","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\index.ts":"2","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\rem.config.ts":"3","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\api.config.ts":"4","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\utils\\asyncComponent.tsx":"5","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\pages\\home\\home.tsx":"6","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\pages\\city\\city.tsx":"7","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\city.api.ts":"8","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\component\\header\\header.tsx":"9","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\api-response.adaptor.ts":"10","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\place.api.ts":"11","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\utils\\local-storage.util.ts":"12","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\router\\index.tsx":"13","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\auth\\auth-service.ts":"14","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\user.api.ts":"15","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\context\\index.ts":"16","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\context\\decoration.ts":"17"},{"size":604,"mtime":1610546611626,"results":"18","hashOfConfig":"19"},{"size":48,"mtime":1610289505954,"results":"20","hashOfConfig":"19"},{"size":547,"mtime":1610290473372,"results":"21","hashOfConfig":"19"},{"size":123,"mtime":1610374979848,"results":"22","hashOfConfig":"19"},{"size":781,"mtime":1610278716673,"results":"23","hashOfConfig":"19"},{"size":3631,"mtime":1610552002496,"results":"24","hashOfConfig":"19"},{"size":4126,"mtime":1610552339989,"results":"25","hashOfConfig":"19"},{"size":1231,"mtime":1610552339841,"results":"26","hashOfConfig":"19"},{"size":2048,"mtime":1610552002568,"results":"27","hashOfConfig":"19"},{"size":811,"mtime":1610552339901,"results":"28","hashOfConfig":"19"},{"size":706,"mtime":1610552339893,"results":"29","hashOfConfig":"19"},{"size":1024,"mtime":1610467640096,"results":"30","hashOfConfig":"19"},{"size":716,"mtime":1610377898730,"results":"31","hashOfConfig":"19"},{"size":1066,"mtime":1610552002490,"results":"32","hashOfConfig":"19"},{"size":467,"mtime":1610552339887,"results":"33","hashOfConfig":"19"},{"size":473,"mtime":1610551923032,"results":"34","hashOfConfig":"19"},{"size":630,"mtime":1610552262840,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"14hgg7",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\index.tsx",[],["75","76"],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\index.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\rem.config.ts",["77"],"(function (doc, win) {\r\n    var docEl = doc.documentElement,\r\n        resizeEvt = 'orientationchange' in window ? 'orientationchange' : 'resize',\r\n        recalc = function () {\r\n            var clientWidth = docEl.clientWidth;\r\n            if (!clientWidth) return;\r\n            docEl.style.fontSize = 20 * (clientWidth / 320) + 'px';\r\n        };\r\n    if (!doc.addEventListener) return;\r\n    win.addEventListener(resizeEvt, recalc, false);\r\n    doc.addEventListener('DOMContentLoaded', recalc, false);\r\n})(document, window);\r\nexport default {};\r\n","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\api.config.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\utils\\asyncComponent.tsx",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\pages\\home\\home.tsx",["78"],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\pages\\city\\city.tsx",["79"],"import React, {ReactNode, useContext, useEffect, useState} from 'react';\r\nimport './city.scss';\r\nimport Header from '../../component/header/header';\r\nimport {Link} from 'react-router-dom';\r\nimport {City} from '../../model/dto/city.model';\r\nimport {CityApi} from '../../service/api/city.api';\r\nimport {PlaceApi} from '../../service/api/place.api';\r\nimport {Place} from '../../model/dto/place';\r\nimport {RouterProps} from '../../model/props/router-props.interface';\r\nimport {LocalStorageUtil} from '../../utils/local-storage.util';\r\nimport {useInject} from '../../service/context/decoration';\r\nimport {Context} from '../../service/context';\r\n\r\nconst PLACE_HISTORY_KEY = 'place_history_key';\r\nexport default function CityPage(props: RouterProps): ReactNode {\r\n    const data = useContext(Context);\r\n    const cityApi = useInject<CityApi>(CityApi);\r\n    const placeApi = useInject<PlaceApi>(PlaceApi);\r\n\r\n    const [currentCity, setCurrentCity] = useState<City>();\r\n    const [placeList, setPlaceList] = useState<Place[]>([]);\r\n    const [searchWord, setSearchWord] = useState<string>('');\r\n\r\n    const [historyTitle, setHistoryTitle] = useState<boolean>();\r\n\r\n    useEffect(() => {\r\n        initCurrentCity(props.match.params.id);\r\n    }, [props.match.params.id]);\r\n\r\n    useEffect(() => {\r\n        console.log(data);\r\n        debugger\r\n        initPlaceHistory();\r\n    }, []);\r\n\r\n    const initCurrentCity = async (id: string) => {\r\n        setCurrentCity(await cityApi.getCityById(id));\r\n    };\r\n\r\n    const searchPlace = async () => {\r\n        if (currentCity && currentCity.id) {\r\n            const places = await placeApi.searchPlace(currentCity.id, searchWord);\r\n            setPlaceList(places);\r\n            setHistoryTitle(false);\r\n        }\r\n    };\r\n\r\n    const initPlaceHistory = () => {\r\n        const placeHistory = LocalStorageUtil.getStore<Place[]>(PLACE_HISTORY_KEY);\r\n        if (placeHistory) {\r\n            setPlaceList(placeHistory);\r\n            setHistoryTitle(true);\r\n        }\r\n    };\r\n\r\n    const clearAll = () => {\r\n        LocalStorageUtil.removeStore(PLACE_HISTORY_KEY);\r\n        setPlaceList([]);\r\n    };\r\n\r\n    const nextPage = (place: Place) => {\r\n        const placeHistory = LocalStorageUtil.getStore<Place[]>(PLACE_HISTORY_KEY) || [];\r\n        LocalStorageUtil.setStore(PLACE_HISTORY_KEY, [...placeHistory?.filter($place => $place.geohash !== place.geohash), place]);\r\n        props.history.push({pathName: '/msite', query: {geohash: place.geohash}})\r\n    };\r\n\r\n\r\n\r\n    return (<div className=\"city_container\">\r\n            <Header showBackBtn={true} title={currentCity?.name}>\r\n                <Link to=\"/home\" className=\"change_city\">\r\n                </Link>\r\n            </Header>\r\n            <form className=\"city_form\" onSubmit={e => e.preventDefault()}>\r\n                <div>\r\n                    <input type=\"search\" name=\"city\" placeholder=\"输入学校、商务楼、地址\" className=\"city_input input_style\"\r\n                           required\r\n                           value={searchWord} onChange={e => setSearchWord(e.target.value)}/>\r\n                </div>\r\n                <div>\r\n                    <input autoComplete=\"off\" onClick={searchPlace} type=\"submit\" name=\"submit\"\r\n                           className=\"city_submit input_style\"\r\n                           value=\"提交\"/>\r\n                </div>\r\n            </form>\r\n            {\r\n                historyTitle ? <header className=\"pois_search_history\">搜索历史</header> : null\r\n            }\r\n            <ul className=\"getpois_ul\">\r\n                {\r\n                    placeList?.map($place => (\r\n                        <li onClick={() => nextPage($place)} key={$place.geohash}>\r\n                            <h4 className=\"pois_name ellipsis\">{$place.name}</h4>\r\n                            <p className=\"pois_address ellipsis\">{$place.address}</p>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n            {(placeList && placeList.length !== 0) ?\r\n                <footer onClick={clearAll} className=\"clear_all_history\">清空所有</footer> : null}\r\n            {(!placeList || placeList.length === 0) ? <div className=\"search_none_place\">很抱歉！无搜索结果</div> : null}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\city.api.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\component\\header\\header.tsx",["80","81","82"],"import React, {useEffect, useState} from 'react';\r\nimport './header.scss';\r\nimport {Icon} from 'antd-mobile';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {AuthService} from '../../service/auth/auth-service';\r\nimport {User} from '../../model/dto/user';\r\nimport {inject} from '../../service/context/decoration';\r\n\r\nexport interface HeaderPropsType {\r\n    title?: string;\r\n    logo?: JSX.Element;\r\n    search?: JSX.Element;\r\n    children?: JSX.Element;\r\n    showBackBtn?: boolean;\r\n    signinUp?: boolean;\r\n}\r\n\r\nexport default function Header(props: HeaderPropsType): JSX.Element {\r\n    const authService = inject<AuthService>(AuthService);\r\n    const history = useHistory();\r\n    const [userInfo, setUserInfo] = useState<User>();\r\n\r\n    useEffect(() => {\r\n        initUserInfo();\r\n    }, []);\r\n\r\n    const goBack = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    const initUserInfo = async () => {\r\n        const user = await authService.getCurrentUser();\r\n        if (user) {\r\n            setUserInfo(user);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <header id='head_top'>\r\n            {props?.logo}\r\n            {props?.search}\r\n            {\r\n                props?.showBackBtn ? (\r\n                    <section onClick={goBack} className=\"head_goback\">\r\n                        <Icon type=\"left\"/>\r\n                    </section>\r\n                ) : null\r\n            }\r\n            {\r\n                props?.signinUp ? (\r\n                    <Link className=\"head_login\" to={userInfo ? '/profile' : 'login'}>\r\n                        {userInfo ? <i className=\"ai-user\"/> : <span className=\"login_span\">登录|注册</span>}\r\n\r\n                    </Link>\r\n                ) : null\r\n            }\r\n            {\r\n                props?.title ? (\r\n                    <section className=\"title_head ellipsis\">\r\n                        <span className=\"title_text\">{props?.title}</span>\r\n                    </section>\r\n                ) : null\r\n            }\r\n            {props?.children}\r\n        </header>\r\n    )\r\n}\r\n","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\api-response.adaptor.ts",["83","84"],"import {Injectable} from '../context/decoration';\r\n\r\n@Injectable()\r\nexport class ApiResponseAdaptor {\r\n\r\n    adapt<T>(promise: Promise<any>): Promise<T> {\r\n        return new Promise<T>(((resolve, reject) => {\r\n            promise.then(res => {\r\n                const resDataJson = typeof res.data === 'object' ? res.data : JSON.parse(res.data);\r\n                if (resDataJson.status === 0) {\r\n                    reject(resDataJson);\r\n                } else {\r\n                    resolve(typeof res.data === 'object' ? res.data : JSON.parse(res.data))\r\n                }\r\n            }, error => {\r\n                if (error.response) {\r\n                    reject(error.response.data)\r\n                } else {\r\n                    reject(error)\r\n                }\r\n            })\r\n        }));\r\n    }\r\n}\r\n","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\place.api.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\utils\\local-storage.util.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\router\\index.tsx",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\auth\\auth-service.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\user.api.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\context\\index.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\context\\decoration.ts",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":13,"column":1,"nodeType":"91","endLine":13,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":23,"column":8,"nodeType":"94","endLine":23,"endColumn":10,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":58,"column":8,"nodeType":"94","endLine":58,"endColumn":31,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":7,"column":9,"nodeType":"100","messageId":"101","endLine":7,"endColumn":19},{"ruleId":"98","severity":1,"message":"102","line":8,"column":9,"nodeType":"100","messageId":"101","endLine":8,"endColumn":16},{"ruleId":"92","severity":1,"message":"103","line":27,"column":8,"nodeType":"94","endLine":27,"endColumn":10,"suggestions":"104"},{"ruleId":"98","severity":1,"message":"105","line":1,"column":21,"nodeType":"100","messageId":"101","endLine":1,"endColumn":30},{"ruleId":"98","severity":1,"message":"102","line":2,"column":9,"nodeType":"100","messageId":"101","endLine":2,"endColumn":16},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initCityGroup', 'initGuessCity', and 'initHotCities'. Either include them or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'initCurrentCity'. Either include it or remove the dependency array.",["109"],"@typescript-eslint/no-unused-vars","'contextGet' is defined but never used.","Identifier","unusedVar","'CityApi' is defined but never used.","React Hook useEffect has a missing dependency: 'initUserInfo'. Either include it or remove the dependency array.",["110"],"'iocInject' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [initCityGroup, initGuessCity, initHotCities]",{"range":"117","text":"118"},"Update the dependencies array to be: [initCurrentCity, props.match.params.id]",{"range":"119","text":"120"},"Update the dependencies array to be: [initUserInfo]",{"range":"121","text":"122"},[831,833],"[initCityGroup, initGuessCity, initHotCities]",[2254,2277],"[initCurrentCity, props.match.params.id]",[906,908],"[initUserInfo]"]