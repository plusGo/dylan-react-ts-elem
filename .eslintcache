[{"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\index.tsx":"1","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\index.ts":"2","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\rem.config.ts":"3","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\api.config.ts":"4","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\context\\index.ts":"5","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\router\\index.tsx":"6","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\utils\\asyncComponent.tsx":"7","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\pages\\login\\login.tsx":"8","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\pages\\home\\home.tsx":"9","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\pages\\city\\city.tsx":"10","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\context\\decoration.ts":"11","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\utils\\local-storage.util.ts":"12","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\city.api.ts":"13","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\place.api.ts":"14","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\component\\header\\header.tsx":"15","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\api-response.adaptor.ts":"16","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\auth\\auth-service.ts":"17","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\user.api.ts":"18","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\component\\loading\\loading.tsx":"19","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\captcha.api.ts":"20","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\login.api.ts":"21"},{"size":604,"mtime":1610546611626,"results":"22","hashOfConfig":"23"},{"size":48,"mtime":1610289505954,"results":"24","hashOfConfig":"23"},{"size":547,"mtime":1610290473372,"results":"25","hashOfConfig":"23"},{"size":120,"mtime":1610886272365,"results":"26","hashOfConfig":"23"},{"size":473,"mtime":1610551923032,"results":"27","hashOfConfig":"23"},{"size":2788,"mtime":1610855716539,"results":"28","hashOfConfig":"23"},{"size":822,"mtime":1610849878178,"results":"29","hashOfConfig":"23"},{"size":5019,"mtime":1610887263086,"results":"30","hashOfConfig":"23"},{"size":3677,"mtime":1610855963733,"results":"31","hashOfConfig":"23"},{"size":4119,"mtime":1610859929201,"results":"32","hashOfConfig":"23"},{"size":630,"mtime":1610886062615,"results":"33","hashOfConfig":"23"},{"size":1024,"mtime":1610467640096,"results":"34","hashOfConfig":"23"},{"size":1246,"mtime":1610886297174,"results":"35","hashOfConfig":"23"},{"size":709,"mtime":1610886302339,"results":"36","hashOfConfig":"23"},{"size":2045,"mtime":1610886080939,"results":"37","hashOfConfig":"23"},{"size":811,"mtime":1610552339901,"results":"38","hashOfConfig":"23"},{"size":1066,"mtime":1610552002490,"results":"39","hashOfConfig":"23"},{"size":470,"mtime":1610886304796,"results":"40","hashOfConfig":"23"},{"size":867,"mtime":1610853298990,"results":"41","hashOfConfig":"23"},{"size":484,"mtime":1610886284033,"results":"42","hashOfConfig":"23"},{"size":639,"mtime":1610886419211,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1jexasv",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\index.tsx",[],["92","93"],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\index.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\rem.config.ts",["94"],"(function (doc, win) {\r\n    var docEl = doc.documentElement,\r\n        resizeEvt = 'orientationchange' in window ? 'orientationchange' : 'resize',\r\n        recalc = function () {\r\n            var clientWidth = docEl.clientWidth;\r\n            if (!clientWidth) return;\r\n            docEl.style.fontSize = 20 * (clientWidth / 320) + 'px';\r\n        };\r\n    if (!doc.addEventListener) return;\r\n    win.addEventListener(resizeEvt, recalc, false);\r\n    doc.addEventListener('DOMContentLoaded', recalc, false);\r\n})(document, window);\r\nexport default {};\r\n","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\config\\api.config.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\context\\index.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\router\\index.tsx",["95"],"import React, {useEffect} from 'react';\r\nimport {HashRouter, Redirect, Route, Switch} from 'react-router-dom';\r\nimport {RouteConfig} from './route.config';\r\nimport Loadable from 'react-loadable';\r\nimport {Loading} from '../component/loading/loading';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport {RouterProps} from '../model/props/router-props.interface';\r\nimport './route.scss';\r\n\r\nconst ROUTE_CONFIG: RouteConfig[] = [\r\n    {\r\n        name: 'login',\r\n        path: '/login',\r\n        exact: true,\r\n        preload: true,\r\n        component: Loadable({\r\n            loader: () => import('../pages/login/login'),\r\n            loading: Loading,\r\n        })\r\n    },\r\n    {\r\n        name: 'home',\r\n        path: '/home',\r\n        exact: true,\r\n        component: Loadable({\r\n            loader: () => import('../pages/home/home'),\r\n            loading: Loading\r\n        })\r\n    }, {\r\n        name: 'city',\r\n        path: '/city/:id',\r\n        exact: false,\r\n        component: Loadable({\r\n            loader: () => import('../pages/city/city'),\r\n            loading: Loading\r\n        })\r\n    }\r\n];\r\n\r\nexport default function RouterOutlet(props: RouterProps): JSX.Element {\r\n    useEffect(() => {\r\n        ROUTE_CONFIG.filter($config => $config.preload && $config.component.preload());\r\n        console.log(props)\r\n    }, []);\r\n\r\n    return (\r\n        <HashRouter>\r\n            <Route render={({location}) => (\r\n                <TransitionGroup>\r\n                    <CSSTransition\r\n                        // 需要加一个key属性，让react认识每个组件，并进行正确的加载。\r\n                        // 这里我改了官方demo的代码， 原来是设置成location.key， 这样的话每次点击同一个路由链接的时候都会渲染。\r\n                        // classNames 就是设置给css动画的标示，记得'classNames'带's'的。\r\n                        key={location?.pathname}\r\n                        classNames=\"animated-router-forward\"\r\n                        // 动画时间设置为800ms，和css中的需要一致。\r\n                        timeout={300}\r\n                    >\r\n                        <Switch location={location}>\r\n                            {\r\n                                ROUTE_CONFIG.map(($config, $key) => (\r\n                                    <Route key={$key} exact={$config.exact} path={$config?.path}\r\n                                           component={$config?.component}/>\r\n                                ))\r\n                            }\r\n                            <Redirect exact from=\"/\" to=\"/home\"/>\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            )}/>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\n","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\utils\\asyncComponent.tsx",[],["96","97"],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\pages\\login\\login.tsx",["98","99","100","101"],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\pages\\home\\home.tsx",["102"],"import React, {useEffect, useState} from 'react';\r\nimport {Header} from '../../component/header/header';\r\nimport {Link} from 'react-router-dom';\r\nimport './home.scss';\r\nimport {CityApi} from '../../service/api/city.api';\r\nimport {City, CityGroup} from '../../model/dto/city.model';\r\nimport {Icon, Flex} from 'antd-mobile';\r\nimport {Consumer} from '../../service/context';\r\nimport {iocInject} from '../../service/context/decoration';\r\n\r\n\r\nexport default function HomePage(): JSX.Element {\r\n    const cityApi = iocInject<CityApi>(CityApi);\r\n\r\n    const [guessCity, setGuessCity] = useState<City>();\r\n    const [hotCities, setHotCities] = useState<City[]>();\r\n    const [cityGroup, setCityGroup] = useState<CityGroup>();\r\n\r\n    useEffect(() => {\r\n        initGuessCity();\r\n        initHotCities();\r\n        initCityGroup();\r\n    }, []);\r\n\r\n    const reloadApplication = () => {\r\n        window.location.reload()\r\n    };\r\n\r\n\r\n    const initGuessCity = async () => {\r\n        setGuessCity(await cityApi.getGuessCity());\r\n    };\r\n\r\n    const initHotCities = async () => {\r\n        setHotCities(await cityApi.getHotCities());\r\n    };\r\n\r\n    const initCityGroup = async () => {\r\n        setCityGroup(await cityApi.getCityGroup());\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Consumer>{\r\n                ({appTitle}) =>\r\n                    <Header signinUp={true}\r\n                            logo={<span onClick={reloadApplication} className=\"head_logo\">{appTitle}</span>}/>\r\n            }</Consumer>\r\n            <nav className=\"city_nav\">\r\n                <div className=\"city_tip\">\r\n                    <span>当前定位城市：</span>\r\n                    <span>定位不准时，请在城市列表中选择</span>\r\n                </div>\r\n                <Link to={`/city/${guessCity?.id}`} className=\"guess_city\">\r\n                    <span>{guessCity?.name}</span>\r\n                    <Icon className=\"arrow_right\" type=\"right\"/>\r\n                </Link>\r\n            </nav>\r\n            <section id=\"hot_city_container\">\r\n                <h4 className=\"city_title\">热门城市</h4>\r\n                <ul className=\"citylistul clear\">\r\n                    {\r\n                        hotCities ? hotCities?.map(($hotCity) =>\r\n                            <li key={$hotCity?.id}>\r\n                                <Link key={$hotCity?.id} to={`/city/${$hotCity?.id}`}>{$hotCity?.name}</Link>\r\n                            </li>\r\n                        ) : null\r\n                    }\r\n                </ul>\r\n            </section>\r\n            <section className=\"group_city_container\">\r\n                <ul className=\"letter_classify\">\r\n                    {cityGroup ? Object.keys(cityGroup)\r\n                        .sort()\r\n                        .map(($key, $index) => (\r\n                            <li key={$key} className=\"letter_classify_li\">\r\n                                <h4 className=\"city_title\">{$key}{$index === 0 ? <span>(按字母排序)</span> : null}</h4>\r\n                                <ul className=\"groupcity_name_container citylistul clear\">\r\n                                    {cityGroup[$key].map($city => (\r\n                                        <li className=\"ellipsis\" key={$city?.id}>\r\n                                            <Link key={$city?.id} to={`/city/${$city?.id}`}>{$city?.name}</Link>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </li>\r\n                        )) : <Flex justify='center'><Icon type='loading' size='md'/></Flex>}\r\n                </ul>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\pages\\city\\city.tsx",["103"],"import React, {useEffect, useState} from 'react';\r\nimport './city.scss';\r\nimport {Header} from '../../component/header/header';\r\nimport {Link} from 'react-router-dom';\r\nimport {City} from '../../model/dto/city.model';\r\nimport {CityApi} from '../../service/api/city.api';\r\nimport {PlaceApi} from '../../service/api/place.api';\r\nimport {Place} from '../../model/dto/place';\r\nimport {RouterProps} from '../../model/props/router-props.interface';\r\nimport {LocalStorageUtil} from '../../utils/local-storage.util';\r\nimport {iocInject} from '../../service/context/decoration';\r\n\r\nconst PLACE_HISTORY_KEY = 'place_history_key';\r\nexport default function CityPage(props: RouterProps): JSX.Element {\r\n    const [cityApi, placeApi] = iocInject<[CityApi, PlaceApi]>([CityApi, PlaceApi]);\r\n\r\n    const [currentCity, setCurrentCity] = useState<City>();\r\n    const [placeList, setPlaceList] = useState<Place[]>([]);\r\n    const [searchWord, setSearchWord] = useState<string>('');\r\n\r\n    const [historyTitle, setHistoryTitle] = useState<boolean>();\r\n\r\n    useEffect(() => {\r\n        initCurrentCity(props.match.params.id);\r\n    }, [props.match.params.id]);\r\n\r\n    useEffect(() => {\r\n        initPlaceHistory();\r\n    }, []);\r\n\r\n    const initCurrentCity = async (id: string) => {\r\n        setCurrentCity(await cityApi.getCityById(id));\r\n    };\r\n\r\n    const searchPlace = async () => {\r\n        if (currentCity && currentCity.id) {\r\n            const places = await placeApi.searchPlace(currentCity.id, searchWord);\r\n            setPlaceList(places);\r\n            setHistoryTitle(false);\r\n        }\r\n    };\r\n\r\n    const initPlaceHistory = () => {\r\n        const placeHistory = LocalStorageUtil.getStore<Place[]>(PLACE_HISTORY_KEY);\r\n        if (placeHistory) {\r\n            setPlaceList(placeHistory);\r\n            setHistoryTitle(true);\r\n        }\r\n    };\r\n\r\n    const clearAll = () => {\r\n        LocalStorageUtil.removeStore(PLACE_HISTORY_KEY);\r\n        setPlaceList([]);\r\n    };\r\n\r\n    const nextPage = (place: Place) => {\r\n        const placeHistory = LocalStorageUtil.getStore<Place[]>(PLACE_HISTORY_KEY) || [];\r\n        LocalStorageUtil.setStore(PLACE_HISTORY_KEY, [...placeHistory?.filter($place => $place.geohash !== place.geohash), place]);\r\n        props.history.push({pathName: '/msite', query: {geohash: place.geohash}})\r\n    };\r\n\r\n\r\n    return (<div className=\"city_container\">\r\n            <Header showBackBtn={true} title={currentCity?.name}>\r\n                <Link to=\"/home\" className=\"change_city\">\r\n                </Link>\r\n            </Header>\r\n            <form className=\"city_form\" onSubmit={e => e.preventDefault()}>\r\n                <div>\r\n                    <input type=\"search\" name=\"city\" placeholder=\"输入学校、商务楼、地址\" className=\"city_input input_style\"\r\n                           required\r\n                           value={searchWord} onChange={e => setSearchWord(e.target.value)}/>\r\n                </div>\r\n                <div>\r\n                    <input autoComplete=\"off\" onClick={searchPlace} type=\"submit\" name=\"submit\"\r\n                           className=\"city_submit input_style\"\r\n                           value=\"提交\"/>\r\n                </div>\r\n            </form>\r\n            {\r\n                historyTitle ? <header className=\"pois_search_history\">搜索历史</header> : null\r\n            }\r\n            <ul className=\"getpois_ul\">\r\n                {\r\n                    placeList?.map($place => (\r\n                        <li onClick={() => nextPage($place)} key={$place.geohash}>\r\n                            <h4 className=\"pois_name ellipsis\">{$place.name}</h4>\r\n                            <p className=\"pois_address ellipsis\">{$place.address}</p>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n            {(placeList && placeList.length !== 0) ?\r\n                <footer onClick={clearAll} className=\"clear_all_history\">清空所有</footer> : null}\r\n            {(!placeList || placeList.length === 0) ? <div className=\"search_none_place\">很抱歉！无搜索结果</div> : null}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\context\\decoration.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\utils\\local-storage.util.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\city.api.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\place.api.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\component\\header\\header.tsx",["104"],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\api-response.adaptor.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\auth\\auth-service.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\user.api.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\component\\loading\\loading.tsx",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\captcha.api.ts",[],"D:\\work_space\\2020\\react_work_space\\dylan-ts-react-elem\\src\\service\\api\\login.api.ts",["105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":13,"column":1,"nodeType":"112","endLine":13,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":44,"column":8,"nodeType":"115","endLine":44,"endColumn":10,"suggestions":"116"},{"ruleId":"106","replacedBy":"117"},{"ruleId":"108","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":17},{"ruleId":"119","severity":1,"message":"123","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":18},{"ruleId":"113","severity":1,"message":"124","line":54,"column":8,"nodeType":"115","endLine":54,"endColumn":10,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":100,"column":50,"nodeType":"128","endLine":100,"endColumn":85},{"ruleId":"113","severity":1,"message":"129","line":23,"column":8,"nodeType":"115","endLine":23,"endColumn":10,"suggestions":"130"},{"ruleId":"113","severity":1,"message":"131","line":25,"column":8,"nodeType":"115","endLine":25,"endColumn":31,"suggestions":"132"},{"ruleId":"113","severity":1,"message":"133","line":25,"column":8,"nodeType":"115","endLine":25,"endColumn":10,"suggestions":"134"},{"ruleId":"119","severity":1,"message":"135","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":14},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["138"],["136"],["137"],"@typescript-eslint/no-unused-vars","'CityApi' is defined but never used.","Identifier","unusedVar","'PlaceApi' is defined but never used.","React Hook useEffect has missing dependencies: 'authService' and 'props.history'. Either include them or remove the dependency array.",["139"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'initCityGroup', 'initGuessCity', and 'initHotCities'. Either include them or remove the dependency array.",["140"],"React Hook useEffect has a missing dependency: 'initCurrentCity'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'initUserInfo'. Either include it or remove the dependency array.",["142"],"'City' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [props]",{"range":"153","text":"154"},"Update the dependencies array to be: [authService, props.history]",{"range":"155","text":"156"},"Update the dependencies array to be: [initCityGroup, initGuessCity, initHotCities]",{"range":"157","text":"158"},"Update the dependencies array to be: [initCurrentCity, props.match.params.id]",{"range":"159","text":"160"},"Update the dependencies array to be: [initUserInfo]",{"range":"161","text":"162"},[1353,1355],"[props]",[1971,1973],"[authService, props.history]",[829,831],"[initCityGroup, initGuessCity, initHotCities]",[1113,1136],"[initCurrentCity, props.match.params.id]",[804,806],"[initUserInfo]"]